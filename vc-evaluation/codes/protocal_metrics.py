# -*- coding: utf-8 -*-
"""protocal_metrics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19liLPfRE7V8N0EDkGGT5LGU2JIN4lMnY
"""

import pandas as pd
import numpy as np
import requests
import datetime



## Collect metrics from APIs and other KPIs

def fetch_defillama_protocol(protocol_name):
  # from DefiLlama
    url = f"https://api.llama.fi/protocol/{protocol_name.lower()}"
    r = requests.get(url)
    r.raise_for_status()
    return r.json()

# Test for uniswap
if 'uni' not in globals():
  uni = fetch_defillama_protocol("uniswap") #produces a dictionary
keys = uni.keys()
# print(uni.keys())


# checks if desired metrics are included in the dictionary to avoid keyerror,
# and returns an updated dictionary with desired keys
def get_protocol_metrics(protocol_dict, keys, metrics):
  ret_dict = {}
  for metric in metrics:
    if metric not in keys:
      continue
    print(f"{metric}:, {protocol_dict[metric]}")
    ret_dict[metric] = protocol_dict[metric]
  return ret_dict

fields = ["name", "category", "tvl", "mcap"]
get_protocol_metrics(uni, keys, fields)

# Basic fields
'''
print("Name:", uni["name"])
print("Category:", uni["category"])
print("TVL:", uni["tvl"])
print("Market Cap:", uni["mcap"])
'''

## automated pulling of multiple protocals
## print(type(uni))



## TVL (Total Value Locked) is one of the key metrics for how the crypto is evaluated
## It is the product of the quantity chain tokens times the prices it is put on chain.

# construct a time series for TVL

## Returns a DataFrame with columns ['date', 'TVL_USD'].
def protocol_tvl_timeseries(protocol_name, protocal_dict):
    tvl_data = protocal_dict.get("tvl", [])
    if not tvl_data:
        raise ValueError(f"No TVL data returned for {protocol_name}")

    df = pd.DataFrame(tvl_data)
    df["date"] = pd.to_datetime(df["date"], unit="s")
    df.rename(columns={"totalLiquidityUSD": "TVL_USD"}, inplace=True)
    df = df[["date", "TVL_USD"]].dropna()
    df.sort_values("date", inplace=True)
    return df


uni_tvl = protocol_tvl_timeseries("uniswap", uni)
# print(uni_tvl.head(10))

uni_tvl.plot(x="date", y="TVL_USD", title="Uniswap TVL ($)")
